<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!-- 配置连接池属性 -->
        <property name="driverClassName" value="@[datasource.connection.driver]"/>
        <property name="url" value="@[datasource.connection.url]"/>
        <property name="username" value="@[datasource.connection.user]"/>
        <property name="password" value="@[datasource.connection.password]"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="@[druid.initialSize]" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="@[druid.maxActive]" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="@[druid.minIdle]" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="@[druid.maxWait]" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="@[druid.timeBetweenEvictionRunsMillis]" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="@[druid.minEvictableIdleTimeMillis]" />
        <!-- 监控数据库 -->
        <property name="filters" value="mergeStat" />
    </bean>

    <!-- 配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 映射数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!--映射mybatis核心配置文件-->
        <property name="configLocation" value="classpath:mybatis/mybatisConfig.xml" />
        <!-- 扫描pojo包，使用别名配置(在mybatis中可以使用别名，即pojo的名称) -->
        <property name="typeAliasesPackage" value="@[mybatis.typeAliasesPackage]"/>
        <!-- 扫描Mapper层的配置文件 -->
        <property name="mapperLocations" value="classpath:com/unfair/mapper/*.xml"/>
    </bean>

    <!-- 使用mybatis的接口代理开发模式(必须保证接口和对应的mybatis的xml名称相同，且在一个文件夹内) -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描mapper的配置文件 -->
        <property name="basePackage" value="com.unfair.mapper"/>

        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

</beans>